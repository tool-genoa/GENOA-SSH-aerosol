# ================================================================================
#
#   GENOA v2.0: the GENerator of reduced Organic Aerosol mechanism
#
#    Copyright (C) 2023 CEREA (ENPC) - INERIS.
#    GENOA is distributed under GPL v3.
#
# ================================================================================
# 
#   Example Configuration File for GENOA v2.0
#
#    Comments prefixed by specific characters (# and ;) - No inline comments.
#    Commented parameters will use the default values provided in Paramters.py 
#
# ================================================================================

[mechanism]
# Identifier of the reduced mechanism, generated automatically by IDchem and prefix
# chem ID for the reduction. Need to be unique [ID] = IDchem - prefix
IDchem = 'M'
# Prefix to save results.
prefix = 'MR'

# Names of SOA precursors - should be linked to the prefix
# Should be consistent with the name in input files
primaryVOCs = ['APINENE','BPINENE','LIMONENE']
ipvocs = 3

# compile mode for SSH-aerosol
# 'fast_compile' - default - only output total SOA concentrations
# 'complete_compile' - output concentrations for all species - take time
# SSH_mode = 'complete_compile'

[input]
# namelist
namelist_pre = 'namelist_sav'
species_list_aer_init='./files/species-list-aer-genoa.dat'

# Directory to initial concentrations. Folders ordered by m/y/x/
pathInitFiles = '../Initial/MTt5ppb'

# Directory to read/save generated chemical mechanisms and record files
# generate _rdc _ref for reduction
pathSSH = '../SSHs/New'
pathNewChem = '../toSSH'
pathNewRes = '../results'

[action]
# 1/0 to activate/disable the option (make sure the section under the option name exists in the config file)
# Activated option: parameters from the corresponding section will be read
# Read parameters will be printed on the screen
# Need to have the section under the identical action name

# Avaliable options are:

# build a new mechanism from MCM output files
build-mechanism = 0
# prereduction
prereduction = 0
# run a SSH-aerosol simulation
simulation = 0
# training
training = 1
# testing
testing = 1
# Set both training and testing to 1 => activate a GENOA reduction


[build-mechanism]

#speciestype = 'MCM'
#speciesfile = '../fromMCM/mcm_subset_mass.txt'
#reactiontype = 'MCM'
#reactionfile = '../fromMCM/mcmv331_reactions.txt'

speciestype  = 'SSH'
speciesfile  = '../examples/toSSH/MR1n/MR1n.mol'
reactiontype = 'SSH'
reactionfile = '../examples/toSSH/MR1n/MR1n.reactions'

# Saturation vapor pressure computation with UManSysProp, Topping et al., 2016
#vpType = 'VP0BP0'
# VP for vapor ponit : 0 - Nannoolal et al., 2008, 1 - Myrdal and Yalkowsky, 1997
# BP for boilling point: 0 - Nannoolal et al., 2004, 1 - Stein and Brown, 1994, 2 - Joback and Reid, 1987
# 'evap': EVAPORATION of Compernolle et al. (2011)
# 'simpol': SIMPOL.1 of Pankow and Asher (2008)

# Read function group decompositions from SOAP output
# This file is generated by SSH-aerosol: using the aerosol list with SMILES strucure (IDchem.aer)
# If not provided, the decomposition in GENOA may be incorrect
#soapfile = '../examples/SOAP_MT'

[prereduction]
# Options for pre-reduction

# Assume VOC for compounds with Psat >= Psat_aero (atm)
Psat_aero = 1E-3
# Remove kdec reactions (very fast reaction)
kdec = 1
# Remove generation > gen
gen = 10
# Remove fast reactions with a lifetime >= tau 
tau = 1E0

[simulation]
# build & compile SSH
# 1 if change IDchem
compile = 1
# 1 run training conditions
simulate = 1
# 1 results saved in pathNewRes; 0 saved in pathSSH
clean = 1

[training]
# active when restart
# 1 reuse chem,results,fake chems; 2: 1 + reuse train_order & ref_conc files 
Reuse_chem = 1

# starting-point mechanism
IDchemPre = 'MR1n'
preChemPath = '../examples/toSSH'

# reference mechanism
IDchemRef =  'MR1n'
refChemPath = '../examples/toSSH'

# training dataset
locs = [[0, 13, 6],[5, 32, 7],[95, 136, 1],[55, 65, 11],[80,73,5],[54,107,10],[82,44,4],[60,131,7]]

# reduction_strategies
strategy_types = ['rm','jp','lp','rp','rs','da']

# reduction search order for parallel reduction
#train_order = '../toSSH/M_recs/reduction_order.use.0'

# stop training if ave err >= try_ave_ref
try_ave_ref = 0.03
# stop training if max err >= try_max_ref
try_max_ref = 0.30

# Number of pre-testing conditions
# Extract from testing file: [0:nPreTest]
nPreTest = 100

training_parameter_table = '../examples/example.csv'

# all parameters after can be assinged in the table
# error tolerances
# can give a list or a float. if the float > 1
err_ref = [0.01, 0.10]
err_rav = [0.005,0.03]

# not used for pre-testing
err_pre = [0.01, 1.]
err_pav = [0.005,1.]

delta_err = 10.

# error tolerances on pre-testing
tag_pre_testing = 2

# reduction options
tag_rm1 = 0
tag_stage = 0
tag_efficient = 0

[testing]
# Name and path to the reference mechanism if not provided in training
#IDchemRef =  'MR1n'
#refChemPath = '../toSSH'

# Name of testing output file: Testing_[IDchem]_all
# save testing errors/average soa mass (or SOA yields) per testing conditions

# List of testing dataset
Test_file = '../examples/API9878.list'
